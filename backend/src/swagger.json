{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IMatchInitTeamData": {
				"properties": {
					"remoteId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"advantage": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMapMode.FIXED": {
				"enum": [
					"FIXED"
				],
				"type": "string"
			},
			"IFixedMap": {
				"properties": {
					"mode": {
						"$ref": "#/components/schemas/EMapMode.FIXED"
					},
					"fixed": {
						"type": "string"
					}
				},
				"required": [
					"mode",
					"fixed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMapMode.BAN": {
				"enum": [
					"BAN"
				],
				"type": "string"
			},
			"EMapMode.PICK": {
				"enum": [
					"PICK"
				],
				"type": "string"
			},
			"EWho": {
				"enum": [
					"TEAM_A",
					"TEAM_B",
					"TEAM_X",
					"TEAM_Y"
				],
				"type": "string"
			},
			"IBanOrPickMap": {
				"properties": {
					"mode": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EMapMode.BAN"
							},
							{
								"$ref": "#/components/schemas/EMapMode.PICK"
							}
						]
					},
					"who": {
						"$ref": "#/components/schemas/EWho"
					}
				},
				"required": [
					"mode",
					"who"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMapMode.RANDOM_BAN": {
				"enum": [
					"RANDOM_BAN"
				],
				"type": "string"
			},
			"EMapMode.RANDOM_PICK": {
				"enum": [
					"RANDOM_PICK"
				],
				"type": "string"
			},
			"EMapMode.AGREE": {
				"enum": [
					"AGREE"
				],
				"type": "string"
			},
			"IAgreeOrRandomMap": {
				"properties": {
					"mode": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EMapMode.RANDOM_BAN"
							},
							{
								"$ref": "#/components/schemas/EMapMode.RANDOM_PICK"
							},
							{
								"$ref": "#/components/schemas/EMapMode.AGREE"
							}
						]
					}
				},
				"required": [
					"mode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ESideMode.FIXED": {
				"enum": [
					"FIXED"
				],
				"type": "string"
			},
			"ESideFixed": {
				"enum": [
					"TEAM_A_CT",
					"TEAM_A_T",
					"TEAM_B_CT",
					"TEAM_B_T",
					"TEAM_X_CT",
					"TEAM_X_T",
					"TEAM_Y_CT",
					"TEAM_Y_T"
				],
				"type": "string"
			},
			"IFixedSide": {
				"properties": {
					"mode": {
						"$ref": "#/components/schemas/ESideMode.FIXED"
					},
					"fixed": {
						"$ref": "#/components/schemas/ESideFixed"
					}
				},
				"required": [
					"mode",
					"fixed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ESideMode.PICK": {
				"enum": [
					"PICK"
				],
				"type": "string"
			},
			"IPickSide": {
				"properties": {
					"mode": {
						"$ref": "#/components/schemas/ESideMode.PICK"
					},
					"who": {
						"$ref": "#/components/schemas/EWho"
					}
				},
				"required": [
					"mode",
					"who"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ESideMode.RANDOM": {
				"enum": [
					"RANDOM"
				],
				"type": "string"
			},
			"ESideMode.KNIFE": {
				"enum": [
					"KNIFE"
				],
				"type": "string"
			},
			"IRandomOrKnifeSide": {
				"properties": {
					"mode": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ESideMode.RANDOM"
							},
							{
								"$ref": "#/components/schemas/ESideMode.KNIFE"
							}
						]
					}
				},
				"required": [
					"mode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IElectionStep": {
				"properties": {
					"map": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IFixedMap"
							},
							{
								"$ref": "#/components/schemas/IBanOrPickMap"
							},
							{
								"$ref": "#/components/schemas/IAgreeOrRandomMap"
							}
						]
					},
					"side": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IFixedSide"
							},
							{
								"$ref": "#/components/schemas/IPickSide"
							},
							{
								"$ref": "#/components/schemas/IRandomOrKnifeSide"
							}
						]
					}
				},
				"required": [
					"map",
					"side"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISerializedGameServer": {
				"properties": {
					"ip": {
						"type": "string"
					},
					"port": {
						"type": "number",
						"format": "double"
					},
					"rconPassword": {
						"type": "string"
					}
				},
				"required": [
					"ip",
					"port",
					"rconPassword"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMatchEndAction": {
				"enum": [
					"KICK_ALL",
					"QUIT_SERVER",
					"NONE"
				],
				"type": "string"
			},
			"ISerializedMatchInitData": {
				"properties": {
					"remoteId": {
						"type": "string"
					},
					"mapPool": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"minItems": 1
					},
					"teamA": {
						"$ref": "#/components/schemas/IMatchInitTeamData"
					},
					"teamB": {
						"$ref": "#/components/schemas/IMatchInitTeamData"
					},
					"electionSteps": {
						"items": {
							"$ref": "#/components/schemas/IElectionStep"
						},
						"type": "array",
						"minItems": 1
					},
					"gameServer": {
						"$ref": "#/components/schemas/ISerializedGameServer"
					},
					"webhookUrl": {
						"type": "string"
					},
					"rconCommands": {
						"properties": {
							"end": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"match": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"knife": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"init": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					},
					"canClinch": {
						"type": "boolean"
					},
					"matchEndAction": {
						"$ref": "#/components/schemas/EMatchEndAction"
					}
				},
				"required": [
					"mapPool",
					"teamA",
					"teamB",
					"electionSteps",
					"gameServer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMatchSate": {
				"enum": [
					"ELECTION",
					"MATCH_MAP",
					"FINISHED"
				],
				"type": "string"
			},
			"ElectionState": {
				"enum": [
					"NOT_STARTED",
					"IN_PROGRESS",
					"FINISHED"
				],
				"type": "string"
			},
			"EStep": {
				"enum": [
					"MAP",
					"SIDE"
				],
				"type": "string"
			},
			"ISerializedElection": {
				"properties": {
					"state": {
						"$ref": "#/components/schemas/ElectionState"
					},
					"currentStep": {
						"type": "number",
						"format": "double"
					},
					"currentElectionStep": {
						"$ref": "#/components/schemas/IElectionStep"
					},
					"currentSubStep": {
						"$ref": "#/components/schemas/EStep"
					},
					"teamX": {
						"type": "string"
					},
					"teamY": {
						"type": "string"
					},
					"remainingMaps": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"map": {
						"type": "string"
					},
					"currentAgree": {
						"properties": {
							"teamB": {
								"type": "string",
								"nullable": true
							},
							"teamA": {
								"type": "string",
								"nullable": true
							}
						},
						"required": [
							"teamB",
							"teamA"
						],
						"type": "object"
					},
					"currentRestart": {
						"properties": {
							"teamB": {
								"type": "boolean"
							},
							"teamA": {
								"type": "boolean"
							}
						},
						"required": [
							"teamB",
							"teamA"
						],
						"type": "object"
					}
				},
				"required": [
					"state",
					"currentStep",
					"currentElectionStep",
					"currentSubStep",
					"remainingMaps",
					"map",
					"currentAgree",
					"currentRestart"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ETeamSides": {
				"enum": [
					"CT",
					"T"
				],
				"type": "string"
			},
			"ISerializedPlayer": {
				"properties": {
					"steamId64": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"steamId64",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISerializedTeam": {
				"properties": {
					"id": {
						"type": "string"
					},
					"remoteId": {
						"type": "string"
					},
					"currentSide": {
						"$ref": "#/components/schemas/ETeamSides"
					},
					"isTeamA": {
						"type": "boolean"
					},
					"isTeamB": {
						"type": "boolean"
					},
					"players": {
						"items": {
							"$ref": "#/components/schemas/ISerializedPlayer"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"advantage": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"currentSide",
					"isTeamA",
					"isTeamB",
					"players",
					"name",
					"advantage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMatchMapSate": {
				"enum": [
					"PENDING",
					"MAP_CHANGE",
					"WARMUP",
					"KNIFE",
					"AFTER_KNIFE",
					"IN_PROGRESS",
					"PAUSED",
					"FINISHED"
				],
				"type": "string"
			},
			"ISerializedMatchMap": {
				"properties": {
					"name": {
						"type": "string"
					},
					"knifeForSide": {
						"type": "boolean"
					},
					"startAsCtTeam": {
						"type": "string"
					},
					"startAsTTeam": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/EMatchMapSate"
					},
					"knifeWinner": {
						"type": "string"
					},
					"readyTeams": {
						"properties": {
							"teamB": {
								"type": "boolean"
							},
							"teamA": {
								"type": "boolean"
							}
						},
						"required": [
							"teamB",
							"teamA"
						],
						"type": "object"
					},
					"knifeRestart": {
						"properties": {
							"teamB": {
								"type": "boolean"
							},
							"teamA": {
								"type": "boolean"
							}
						},
						"required": [
							"teamB",
							"teamA"
						],
						"type": "object"
					},
					"score": {
						"properties": {
							"teamB": {
								"type": "number",
								"format": "double"
							},
							"teamA": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"teamB",
							"teamA"
						],
						"type": "object"
					},
					"overTimeEnabled": {
						"type": "boolean"
					},
					"overTimeMaxRounds": {
						"type": "number",
						"format": "double"
					},
					"maxRounds": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"knifeForSide",
					"startAsCtTeam",
					"startAsTTeam",
					"state",
					"readyTeams",
					"knifeRestart",
					"score",
					"overTimeEnabled",
					"overTimeMaxRounds",
					"maxRounds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISerializedMatch": {
				"properties": {
					"id": {
						"type": "string"
					},
					"matchInitData": {
						"$ref": "#/components/schemas/ISerializedMatchInitData"
					},
					"state": {
						"$ref": "#/components/schemas/EMatchSate"
					},
					"election": {
						"$ref": "#/components/schemas/ISerializedElection"
					},
					"teamA": {
						"$ref": "#/components/schemas/ISerializedTeam"
					},
					"teamB": {
						"$ref": "#/components/schemas/ISerializedTeam"
					},
					"gameServer": {
						"$ref": "#/components/schemas/ISerializedGameServer"
					},
					"logSecret": {
						"type": "string"
					},
					"parseIncomingLogs": {
						"type": "boolean"
					},
					"logCounter": {
						"type": "number",
						"format": "double"
					},
					"logLineCounter": {
						"type": "number",
						"format": "double"
					},
					"matchMaps": {
						"items": {
							"$ref": "#/components/schemas/ISerializedMatchMap"
						},
						"type": "array"
					},
					"currentMap": {
						"type": "number",
						"format": "double"
					},
					"canClinch": {
						"type": "boolean"
					},
					"webhookUrl": {
						"type": "string"
					},
					"matchEndAction": {
						"$ref": "#/components/schemas/EMatchEndAction"
					}
				},
				"required": [
					"id",
					"matchInitData",
					"state",
					"election",
					"teamA",
					"teamB",
					"gameServer",
					"logSecret",
					"parseIncomingLogs",
					"logCounter",
					"logLineCounter",
					"matchMaps",
					"currentMap",
					"canClinch",
					"matchEndAction"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IMatchChange": {
				"properties": {
					"state": {
						"$ref": "#/components/schemas/EMatchSate"
					},
					"gameServer": {
						"$ref": "#/components/schemas/ISerializedGameServer"
					},
					"webhookUrl": {
						"type": "string",
						"nullable": true
					},
					"logSecret": {
						"type": "string"
					},
					"parseIncomingLogs": {
						"type": "boolean"
					},
					"currentMap": {
						"type": "number",
						"format": "double"
					},
					"canClinch": {
						"type": "boolean"
					},
					"matchEndAction": {
						"$ref": "#/components/schemas/EMatchEndAction"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "tmt2-backend",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Jens Forstmann"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/matches": {
			"post": {
				"operationId": "CreateMatch",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"type": "string"
										}
									},
									"required": [
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISerializedMatchInitData"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllMatches",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ISerializedMatch"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/matches/{id}": {
			"get": {
				"operationId": "GetMatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ISerializedMatch"
										},
										{}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "ChangeMatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "boolean"
										},
										{}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMatchChange"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMatch",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/matches/{id}/server/round_backups": {
			"get": {
				"operationId": "GetRoundBackups",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"total": {
													"type": "number",
													"format": "double"
												},
												"latestFiles": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"total",
												"latestFiles"
											],
											"type": "object"
										},
										{}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "count",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/matches/{id}/server/round_backups/{file}": {
			"post": {
				"operationId": "LoadRoundBackup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "boolean"
										},
										{}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "file",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/matches/{id}/server/log/{secret}": {
			"post": {
				"operationId": "ReceiveLog",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "secret",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}