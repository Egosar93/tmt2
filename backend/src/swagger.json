{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ITeam": {
				"properties": {
					"remoteId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMapMode.FIXED": {
				"enum": [
					"FIXED"
				],
				"type": "string"
			},
			"IFixedMap": {
				"properties": {
					"mode": {
						"$ref": "#/components/schemas/EMapMode.FIXED"
					},
					"fixed": {
						"type": "string"
					}
				},
				"required": [
					"mode",
					"fixed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMapMode.BAN": {
				"enum": [
					"BAN"
				],
				"type": "string"
			},
			"EMapMode.PICK": {
				"enum": [
					"PICK"
				],
				"type": "string"
			},
			"EWho": {
				"enum": [
					"TEAM_1",
					"TEAM_2",
					"TEAM_X",
					"TEAM_Y"
				],
				"type": "string"
			},
			"IBanOrPickMap": {
				"properties": {
					"mode": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EMapMode.BAN"
							},
							{
								"$ref": "#/components/schemas/EMapMode.PICK"
							}
						]
					},
					"who": {
						"$ref": "#/components/schemas/EWho"
					}
				},
				"required": [
					"mode",
					"who"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMapMode.RANDOM_BAN": {
				"enum": [
					"RANDOM_BAN"
				],
				"type": "string"
			},
			"EMapMode.RANDOM_PICK": {
				"enum": [
					"RANDOM_PICK"
				],
				"type": "string"
			},
			"EMapMode.AGREE": {
				"enum": [
					"AGREE"
				],
				"type": "string"
			},
			"IAgreeOrRandomMap": {
				"properties": {
					"mode": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/EMapMode.RANDOM_BAN"
							},
							{
								"$ref": "#/components/schemas/EMapMode.RANDOM_PICK"
							},
							{
								"$ref": "#/components/schemas/EMapMode.AGREE"
							}
						]
					}
				},
				"required": [
					"mode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ESideMode.FIXED": {
				"enum": [
					"FIXED"
				],
				"type": "string"
			},
			"ESideFixed": {
				"enum": [
					"TEAM_1_CT",
					"TEAM_1_T",
					"TEAM_2_CT",
					"TEAM_2_T",
					"TEAM_X_CT",
					"TEAM_X_T",
					"TEAM_Y_CT",
					"TEAM_Y_T"
				],
				"type": "string"
			},
			"IFixedSide": {
				"properties": {
					"mode": {
						"$ref": "#/components/schemas/ESideMode.FIXED"
					},
					"fixed": {
						"$ref": "#/components/schemas/ESideFixed"
					}
				},
				"required": [
					"mode",
					"fixed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ESideMode.PICK": {
				"enum": [
					"PICK"
				],
				"type": "string"
			},
			"IPickSide": {
				"properties": {
					"mode": {
						"$ref": "#/components/schemas/ESideMode.PICK"
					},
					"who": {
						"$ref": "#/components/schemas/EWho"
					}
				},
				"required": [
					"mode",
					"who"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ESideMode.RANDOM": {
				"enum": [
					"RANDOM"
				],
				"type": "string"
			},
			"ESideMode.KNIFE": {
				"enum": [
					"KNIFE"
				],
				"type": "string"
			},
			"IRandomOrKnifeSide": {
				"properties": {
					"mode": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ESideMode.RANDOM"
							},
							{
								"$ref": "#/components/schemas/ESideMode.KNIFE"
							}
						]
					}
				},
				"required": [
					"mode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IElectionStep": {
				"properties": {
					"map": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IFixedMap"
							},
							{
								"$ref": "#/components/schemas/IBanOrPickMap"
							},
							{
								"$ref": "#/components/schemas/IAgreeOrRandomMap"
							}
						]
					},
					"side": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IFixedSide"
							},
							{
								"$ref": "#/components/schemas/IPickSide"
							},
							{
								"$ref": "#/components/schemas/IRandomOrKnifeSide"
							}
						]
					}
				},
				"required": [
					"map",
					"side"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IMatchInitData": {
				"properties": {
					"remoteId": {
						"type": "string"
					},
					"mapPool": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"minItems": 1
					},
					"team1": {
						"$ref": "#/components/schemas/ITeam"
					},
					"team2": {
						"$ref": "#/components/schemas/ITeam"
					},
					"electionSteps": {
						"items": {
							"$ref": "#/components/schemas/IElectionStep"
						},
						"type": "array",
						"minItems": 1
					},
					"gameServer": {
						"properties": {
							"rconPassword": {
								"type": "string"
							},
							"port": {
								"type": "number",
								"format": "double"
							},
							"ip": {
								"type": "string"
							}
						},
						"required": [
							"rconPassword",
							"port",
							"ip"
						],
						"type": "object"
					},
					"webhookUrl": {
						"type": "string"
					},
					"rcon": {
						"properties": {
							"end": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"match": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"knife": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"init": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					},
					"canClinch": {
						"type": "boolean"
					}
				},
				"required": [
					"mapPool",
					"team1",
					"team2",
					"electionSteps",
					"gameServer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IMatch": {
				"properties": {
					"matchInitData": {
						"$ref": "#/components/schemas/IMatchInitData"
					}
				},
				"required": [
					"matchInitData"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EMatchSate": {
				"enum": [
					"ELECTION",
					"MATCH_MAP",
					"FINISHED"
				],
				"type": "string"
			},
			"IMatchChange": {
				"properties": {
					"state": {
						"$ref": "#/components/schemas/EMatchSate"
					},
					"currentMap": {
						"type": "number",
						"format": "double"
					},
					"canClinch": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "tmt2-backend",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Jens Forstmann"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/matches": {
			"post": {
				"operationId": "CreateMatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"type": "string"
										}
									},
									"required": [
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMatchInitData"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllMatches",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IMatch"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/matches/{id}": {
			"get": {
				"operationId": "GetMatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/IMatch"
										},
										{}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "ChangeMatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "boolean"
										},
										{}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IMatchChange"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMatch",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/matches/{id}/server/log/{secret}": {
			"post": {
				"operationId": "ReceiveLog",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "secret",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}